### YamlMime:ManagedReference
items:
- uid: ClassLibrary.DiceManagement
  commentId: T:ClassLibrary.DiceManagement
  id: DiceManagement
  parent: ClassLibrary
  children:
  - ClassLibrary.DiceManagement.CheckDiceHigher(System.Int32,System.Int32,System.Int32,System.Int32)
  - ClassLibrary.DiceManagement.CheckDiceLower(System.Int32,System.Int32,System.Int32,System.Int32)
  - ClassLibrary.DiceManagement.ThrowDie
  langs:
  - csharp
  - vb
  name: DiceManagement
  nameWithType: DiceManagement
  fullName: ClassLibrary.DiceManagement
  type: Class
  source:
    remote:
      path: ClassLibrary/DiceManagement.cs
      branch: master
      repo: https://github.com/PiotrCiborowski/DiceGame-WPF.git
    id: DiceManagement
    path: DiceManagement.cs
    startLine: 8
  assemblies:
  - ClassLibrary
  namespace: ClassLibrary
  syntax:
    content: public class DiceManagement
    content.vb: Public Class DiceManagement
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: ClassLibrary.DiceManagement.ThrowDie
  commentId: M:ClassLibrary.DiceManagement.ThrowDie
  id: ThrowDie
  parent: ClassLibrary.DiceManagement
  langs:
  - csharp
  - vb
  name: ThrowDie()
  nameWithType: DiceManagement.ThrowDie()
  fullName: ClassLibrary.DiceManagement.ThrowDie()
  type: Method
  source:
    remote:
      path: ClassLibrary/DiceManagement.cs
      branch: master
      repo: https://github.com/PiotrCiborowski/DiceGame-WPF.git
    id: ThrowDie
    path: DiceManagement.cs
    startLine: 12
  assemblies:
  - ClassLibrary
  namespace: ClassLibrary
  syntax:
    content: public static int ThrowDie()
    return:
      type: System.Int32
    content.vb: Public Shared Function ThrowDie As Integer
  overload: ClassLibrary.DiceManagement.ThrowDie*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: ClassLibrary.DiceManagement.CheckDiceHigher(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:ClassLibrary.DiceManagement.CheckDiceHigher(System.Int32,System.Int32,System.Int32,System.Int32)
  id: CheckDiceHigher(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: ClassLibrary.DiceManagement
  langs:
  - csharp
  - vb
  name: CheckDiceHigher(Int32, Int32, Int32, Int32)
  nameWithType: DiceManagement.CheckDiceHigher(Int32, Int32, Int32, Int32)
  fullName: ClassLibrary.DiceManagement.CheckDiceHigher(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: ClassLibrary/DiceManagement.cs
      branch: master
      repo: https://github.com/PiotrCiborowski/DiceGame-WPF.git
    id: CheckDiceHigher
    path: DiceManagement.cs
    startLine: 17
  assemblies:
  - ClassLibrary
  namespace: ClassLibrary
  syntax:
    content: public static int CheckDiceHigher(int enemyD1, int enemyD2, int myD1, int myD2)
    parameters:
    - id: enemyD1
      type: System.Int32
    - id: enemyD2
      type: System.Int32
    - id: myD1
      type: System.Int32
    - id: myD2
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function CheckDiceHigher(enemyD1 As Integer, enemyD2 As Integer, myD1 As Integer, myD2 As Integer) As Integer
  overload: ClassLibrary.DiceManagement.CheckDiceHigher*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: ClassLibrary.DiceManagement.CheckDiceLower(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:ClassLibrary.DiceManagement.CheckDiceLower(System.Int32,System.Int32,System.Int32,System.Int32)
  id: CheckDiceLower(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: ClassLibrary.DiceManagement
  langs:
  - csharp
  - vb
  name: CheckDiceLower(Int32, Int32, Int32, Int32)
  nameWithType: DiceManagement.CheckDiceLower(Int32, Int32, Int32, Int32)
  fullName: ClassLibrary.DiceManagement.CheckDiceLower(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: ClassLibrary/DiceManagement.cs
      branch: master
      repo: https://github.com/PiotrCiborowski/DiceGame-WPF.git
    id: CheckDiceLower
    path: DiceManagement.cs
    startLine: 33
  assemblies:
  - ClassLibrary
  namespace: ClassLibrary
  syntax:
    content: public static int CheckDiceLower(int enemyD1, int enemyD2, int myD1, int myD2)
    parameters:
    - id: enemyD1
      type: System.Int32
    - id: enemyD2
      type: System.Int32
    - id: myD1
      type: System.Int32
    - id: myD2
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function CheckDiceLower(enemyD1 As Integer, enemyD2 As Integer, myD1 As Integer, myD2 As Integer) As Integer
  overload: ClassLibrary.DiceManagement.CheckDiceLower*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: ClassLibrary
  commentId: N:ClassLibrary
  name: ClassLibrary
  nameWithType: ClassLibrary
  fullName: ClassLibrary
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ClassLibrary.DiceManagement.ThrowDie*
  commentId: Overload:ClassLibrary.DiceManagement.ThrowDie
  name: ThrowDie
  nameWithType: DiceManagement.ThrowDie
  fullName: ClassLibrary.DiceManagement.ThrowDie
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: ClassLibrary.DiceManagement.CheckDiceHigher*
  commentId: Overload:ClassLibrary.DiceManagement.CheckDiceHigher
  name: CheckDiceHigher
  nameWithType: DiceManagement.CheckDiceHigher
  fullName: ClassLibrary.DiceManagement.CheckDiceHigher
- uid: ClassLibrary.DiceManagement.CheckDiceLower*
  commentId: Overload:ClassLibrary.DiceManagement.CheckDiceLower
  name: CheckDiceLower
  nameWithType: DiceManagement.CheckDiceLower
  fullName: ClassLibrary.DiceManagement.CheckDiceLower
